swagger: "2.0"
info:
  version: "0.0.1"
  title: "526 Soccer Database Application"
host: localhost:3000
# basePath prefixes all resource paths 
basePath: /api
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /players/getPlayers:
    x-swagger-router-controller: player_controller
    get:
      description: Retrieves all players in the database and returns them as JSON data.
      operationId: getAllPlayers
      responses:
        "200":
          description: Returns an array of players found.
          schema:
            description: An array of player objects
            type: array
            items:
              $ref: "#/definitions/PlayerObject"
        "404":
          description: Data not found
          schema:
            $ref: "#/definitions/NotFoundErrorResponse"
  /players/getPlayers/{playerName}:
    x-swagger-router-controller: player_controller
    get:
      description: Retrieves all players in the database whose names contain the provided search text and returns them as JSON data.
      operationId: getPlayer
      parameters:
        - in: path
          name: playerName
          required: true
          type: string
          description: The text to search players by
      responses:
        "200":
          description: Returns an array of players found.
          schema:
            description: An array of player objects
            type: array
            items:
              $ref: "#/definitions/PlayerObject"
        "404":
          description: Data not found
          schema:
            $ref: "#/definitions/NotFoundErrorResponse"
  /players/getPlayers/filter:
    x-swagger-router-controller: player_controller
    get:
      description: Retrieves all players in the database who match the criteria provided in the body of the request object and returns them as JSON data.
      operationId: filterSearchPlayer
      responses:
        "200":
          description: Returns an array of players found.
          schema:
            description: An array of player objects
            type: array
            items:
              $ref: "#/definitions/PlayerObject"
        "404":
          description: Data not found
          schema:
            $ref: "#/definitions/NotFoundErrorResponse"
  /teams/getTeams:
    x-swagger-router-controller: team_controller
    get:
      description: Retrieves all teams in the database and returns them as JSON data.
      operationId: getAllTeams
      responses:
        "200":
          description: Returns an array of teams found
          schema:
            description: An array of team objects
            type: array
            items:
              $ref: "#/definitions/TeamObject"
        "404":
          description: Data not found
          schema:
            $ref: "#/definitions/NotFoundErrorResponse"
  /teams/getTeams/{teamName}:
    x-swagger-router-controller: team_controller
    get:
      description: Retrieves all teams in the database whose names contain the provided search text and returns them as JSON data.
      operationId: getTeam
      parameters:
        - in: path
          name: teamName
          required: true
          type: string
          description: The text to search team by
      responses:
        "200":
          description: Returns an array of teams found
          schema:
            description: An array of team objects
            type: array
            items:
              $ref: "#/definitions/TeamObject"
        "404":
          description: Data not found
          schema:
            $ref: "#/definitions/NotFoundErrorResponse"
  /teams/getTeams/filter:
    x-swagger-router-controller: team_controller
    get:
      description: Retrieves all teams in the database who match the criteria provided in the body of the request object and returns them as JSON data.
      operationId: filterSearchTeam
      responses:
        "200":
          description: Returns an array of teams found
          schema:
            description: An array of team objects
            type: array
            items:
              $ref: "#/definitions/TeamObject"
        "404":
          description: Data not found
          schema:
            $ref: "#/definitions/NotFoundErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  NotFoundErrorResponse:
    required:
      - message
      - errorCode
    properties:
      message:
        type: string
      errorCode:
        type: integer
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  PlayerObject:
    required:
      - firstName
      - lastName
      - number
      - position
      - salary
      - team
      - nationality
    properties:
      firstName:
        type: string
        description: The first name of the player
      lastName:
        type: string
        description: The last name of the player
      number:
        type: integer
        description: The jersey number for the player
      position:
        type: string
        description: The position the player plays
      salary:
        type: integer
        description: The salary/transfer market value of the player
      team:
        type: string
        description: The name of the team the player plays for
      nationality:
        type: string
        description: The country the player represents nationally
  TeamObject:
    required:
      - name
      - yearFounded
      - league
      - homeStadium
    properties:
      name:
        type: string
        description: The name of the team
      yearFounded:
        type: integer
        description: The year the team was founded
      league:
        type: string
        description: The league the team plays in
      homeStadium:
        type: string
        description: The name of the stadium the team plays in